@inproceedings{Kiselyov2004methodology,
author = {Kiselyov, Oleg and Swadi, Kedar N. and Taha, Walid},
title = {A methodology for generating verified combinatorial circuits},
year = {2004},
isbn = {1581138601},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1017753.1017794},
doi = {10.1145/1017753.1017794},
abstract = {High-level programming languages offer significant expressivity but provide little or no guarantees about resource use. Resource-bounded languages --- such as hardware-description languages --- provide strong guarantees about the runtime behavior of computations but often lack mechanisms that allow programmers to write more structured, modular, and reusable programs. To overcome this basic tension in language design, recent work advocated the use of Resource-aware Programming (RAP) languages, which take into account the natural distinction between the development platform and the deployment platform for resource-constrained software.This paper investigates the use of RAP languages for the generation of combinatorial circuits. The key challenge that we encounter is that the RAP approach does not safely admit a mechanism to express a posteriori (post-generation) optimizations. The paper proposes and studies the use of abstract interpretation to overcome this problem. The approach is illustrated using an in-depth analysis of the Fast Fourier Transform (FFT). The generated computations are comparable to those generated by FFTW.},
booktitle = {Proceedings of the 4th ACM International Conference on Embedded Software},
pages = {249â€“258},
numpages = {10},
keywords = {abstract interpretation, multi-stage programming},
location = {Pisa, Italy},
series = {EMSOFT '04}
}
